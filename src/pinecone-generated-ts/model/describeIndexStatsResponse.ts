/**
 * Pinecone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { NamespaceSummary } from './namespaceSummary';

/**
* The response for the `DescribeIndexStats` operation.
*/
export class DescribeIndexStatsResponse {
    /**
    * A mapping for each namespace in the index from the namespace name to a summary of its contents. If a metadata filter expression is present, the summary will reflect only vectors matching that expression.
    */
    'namespaces'?: { [key: string]: NamespaceSummary; };
    /**
    * The dimension of the indexed vectors.
    */
    'dimension'?: number;
    /**
    * The fullness of the index, regardless of whether a metadata filter expression was passed. The granularity of this metric is 10%.
    */
    'indexFullness'?: number;
    'totalVectorCount'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "namespaces",
            "baseName": "namespaces",
            "type": "{ [key: string]: NamespaceSummary; }"
        },
        {
            "name": "dimension",
            "baseName": "dimension",
            "type": "number"
        },
        {
            "name": "indexFullness",
            "baseName": "indexFullness",
            "type": "number"
        },
        {
            "name": "totalVectorCount",
            "baseName": "totalVectorCount",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return DescribeIndexStatsResponse.attributeTypeMap;
    }
}

