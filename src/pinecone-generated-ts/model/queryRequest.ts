/**
 * Pinecone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { QueryVector } from './queryVector';

/**
* The request for the `Query` operation.
*/
export class QueryRequest {
    /**
    * The namespace to query.
    */
    'namespace'?: string;
    /**
    * The number of results to return for each query.
    */
    'topK': number;
    /**
    * The filter to apply. You can use vector metadata to limit your search. See https://www.pinecone.io/docs/metadata-filtering/.
    */
    'filter'?: object;
    /**
    * Indicates whether vector values are included in the response.
    */
    'includeValues'?: boolean = false;
    /**
    * Indicates whether metadata is included in the response as well as the ids.
    */
    'includeMetadata'?: boolean = false;
    /**
    * DEPRECATED. The query vectors. Each `query()` request can contain only one of the parameters `queries`, `vector`, or  `id`.
    */
    'queries'?: Array<QueryVector>;
    /**
    * The query vector. This should be the same length as the dimension of the index being queried. Each `query()` request can contain only one of the parameters `id` or `vector`.
    */
    'vector'?: Array<number>;
    /**
    * The unique ID of the vector to be used as a query vector. Each `query()` request can contain only one of the parameters `queries`, `vector`, or  `id`.
    */
    'id'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "namespace",
            "baseName": "namespace",
            "type": "string"
        },
        {
            "name": "topK",
            "baseName": "topK",
            "type": "number"
        },
        {
            "name": "filter",
            "baseName": "filter",
            "type": "object"
        },
        {
            "name": "includeValues",
            "baseName": "includeValues",
            "type": "boolean"
        },
        {
            "name": "includeMetadata",
            "baseName": "includeMetadata",
            "type": "boolean"
        },
        {
            "name": "queries",
            "baseName": "queries",
            "type": "Array<QueryVector>"
        },
        {
            "name": "vector",
            "baseName": "vector",
            "type": "Array<number>"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return QueryRequest.attributeTypeMap;
    }
}

